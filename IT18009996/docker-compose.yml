# version: '3'

# services:
#   backend-api: 
#     image: 'inthirajith-api'
#     build:
#       context: ./api
#       dockerfile: ./Dockerfile
#     ports:
#       - 5000:5000
#     volumes:
#       - ./api:/app
#     networks:
#       -inthirajith
#     depends_on:
#       - mongo
#   frontend-client: 
#     image: 'inthirajith-client'
#     build:
#       context: ./client
#       dockerfile: ./Dockerfile
#     ports:
#       - 3000:3000
#     networks:
#       -inthirajith
#     volumes:
#       - ./client:/app
#     environment:
#       - CHOKIDAR_USEPOLLING=true
#     depends_on:
#       - backend-api       
#   mongo:
#     image: mongo
#     networks:
#       - inthirajith
#     ports:
#       - 27017:27017
#     restart: always   
#     volumes:
#       - mongodb:/data/db
#       - mongodb_config:/data/configdb
      
      
# networks:
#   inthirajith:
#     driver: bridge      

# volumes:    
#   mongodb:
#   mongodb_config:

version: '3'

services:
  backend-api:
    image: inthirajith-api
    build:
      context: ./api
      dockerfile: ./Dockerfile
    ports:
      - 5000:5000
    volumes:
      - ./api:/app
    networks:
      - inthirajith
    depends_on:
      - mongo
  frontend-client:
    image: 'inthirajith-client'
    build:
      context: ./client
      dockerfile: ./Dockerfile
    ports:
      - 3000:3000
    networks:
      - inthirajith
    volumes:
      - ./client:/app
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend-api
  mongo:
    image: mongo
    networks:
      - inthirajith
    ports:
      - 27017:27017
    restart: always
    volumes:
      - mongodb:/data/db
      - mongodb_config:/data/configdb

networks:
  inthirajith:
    driver: bridge

volumes:
  mongodb:
  mongodb_config:
